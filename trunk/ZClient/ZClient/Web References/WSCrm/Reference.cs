//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.225 版自动生成。
// 
#pragma warning disable 1591

namespace ZClient.WSCrm {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CrmServiceSoap", Namespace="http://Zsystem.Info/")]
    public partial class CrmService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientListByCreatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationListByClientIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelOperationStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOperationStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddtrOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SettrOPOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CrmService() {
            this.Url = global::ZClient.Properties.Settings.Default.ZClient_WSCrm_CrmService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddClientCompletedEventHandler AddClientCompleted;
        
        /// <remarks/>
        public event SetClientCompletedEventHandler SetClientCompleted;
        
        /// <remarks/>
        public event DelClientCompletedEventHandler DelClientCompleted;
        
        /// <remarks/>
        public event GetClientCompletedEventHandler GetClientCompleted;
        
        /// <remarks/>
        public event GetClientListCompletedEventHandler GetClientListCompleted;
        
        /// <remarks/>
        public event GetClientListByCreatorCompletedEventHandler GetClientListByCreatorCompleted;
        
        /// <remarks/>
        public event AddOperationCompletedEventHandler AddOperationCompleted;
        
        /// <remarks/>
        public event SetOperationCompletedEventHandler SetOperationCompleted;
        
        /// <remarks/>
        public event DelOperationCompletedEventHandler DelOperationCompleted;
        
        /// <remarks/>
        public event GetOperationListByClientIDCompletedEventHandler GetOperationListByClientIDCompleted;
        
        /// <remarks/>
        public event GetOperationListCompletedEventHandler GetOperationListCompleted;
        
        /// <remarks/>
        public event GetOperationCompletedEventHandler GetOperationCompleted;
        
        /// <remarks/>
        public event AddOperationStateCompletedEventHandler AddOperationStateCompleted;
        
        /// <remarks/>
        public event DelOperationStateCompletedEventHandler DelOperationStateCompleted;
        
        /// <remarks/>
        public event SetOperationStateCompletedEventHandler SetOperationStateCompleted;
        
        /// <remarks/>
        public event AddProductCompletedEventHandler AddProductCompleted;
        
        /// <remarks/>
        public event SetProductCompletedEventHandler SetProductCompleted;
        
        /// <remarks/>
        public event DelProductCompletedEventHandler DelProductCompleted;
        
        /// <remarks/>
        public event GetProductCompletedEventHandler GetProductCompleted;
        
        /// <remarks/>
        public event GetProductListCompletedEventHandler GetProductListCompleted;
        
        /// <remarks/>
        public event AddtrOPCompletedEventHandler AddtrOPCompleted;
        
        /// <remarks/>
        public event SettrOPCompletedEventHandler SettrOPCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/AddClient", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddClient(t_Client mClient, string OperatorID) {
            this.Invoke("AddClient", new object[] {
                        mClient,
                        OperatorID});
        }
        
        /// <remarks/>
        public void AddClientAsync(t_Client mClient, string OperatorID) {
            this.AddClientAsync(mClient, OperatorID, null);
        }
        
        /// <remarks/>
        public void AddClientAsync(t_Client mClient, string OperatorID, object userState) {
            if ((this.AddClientOperationCompleted == null)) {
                this.AddClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientOperationCompleted);
            }
            this.InvokeAsync("AddClient", new object[] {
                        mClient,
                        OperatorID}, this.AddClientOperationCompleted, userState);
        }
        
        private void OnAddClientOperationCompleted(object arg) {
            if ((this.AddClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetClient", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetClient(t_Client mClient, string OperatorID) {
            this.Invoke("SetClient", new object[] {
                        mClient,
                        OperatorID});
        }
        
        /// <remarks/>
        public void SetClientAsync(t_Client mClient, string OperatorID) {
            this.SetClientAsync(mClient, OperatorID, null);
        }
        
        /// <remarks/>
        public void SetClientAsync(t_Client mClient, string OperatorID, object userState) {
            if ((this.SetClientOperationCompleted == null)) {
                this.SetClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetClientOperationCompleted);
            }
            this.InvokeAsync("SetClient", new object[] {
                        mClient,
                        OperatorID}, this.SetClientOperationCompleted, userState);
        }
        
        private void OnSetClientOperationCompleted(object arg) {
            if ((this.SetClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/DelClient", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelClient(t_Client mClient, string OperatorID) {
            this.Invoke("DelClient", new object[] {
                        mClient,
                        OperatorID});
        }
        
        /// <remarks/>
        public void DelClientAsync(t_Client mClient, string OperatorID) {
            this.DelClientAsync(mClient, OperatorID, null);
        }
        
        /// <remarks/>
        public void DelClientAsync(t_Client mClient, string OperatorID, object userState) {
            if ((this.DelClientOperationCompleted == null)) {
                this.DelClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelClientOperationCompleted);
            }
            this.InvokeAsync("DelClient", new object[] {
                        mClient,
                        OperatorID}, this.DelClientOperationCompleted, userState);
        }
        
        private void OnDelClientOperationCompleted(object arg) {
            if ((this.DelClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetClient", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Client GetClient(string ClientID, string OperatorID) {
            object[] results = this.Invoke("GetClient", new object[] {
                        ClientID,
                        OperatorID});
            return ((t_Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAsync(string ClientID, string OperatorID) {
            this.GetClientAsync(ClientID, OperatorID, null);
        }
        
        /// <remarks/>
        public void GetClientAsync(string ClientID, string OperatorID, object userState) {
            if ((this.GetClientOperationCompleted == null)) {
                this.GetClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientOperationCompleted);
            }
            this.InvokeAsync("GetClient", new object[] {
                        ClientID,
                        OperatorID}, this.GetClientOperationCompleted, userState);
        }
        
        private void OnGetClientOperationCompleted(object arg) {
            if ((this.GetClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientCompleted(this, new GetClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetClientList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Client[] GetClientList(string OperatorID) {
            object[] results = this.Invoke("GetClientList", new object[] {
                        OperatorID});
            return ((t_Client[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClientListAsync(string OperatorID) {
            this.GetClientListAsync(OperatorID, null);
        }
        
        /// <remarks/>
        public void GetClientListAsync(string OperatorID, object userState) {
            if ((this.GetClientListOperationCompleted == null)) {
                this.GetClientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientListOperationCompleted);
            }
            this.InvokeAsync("GetClientList", new object[] {
                        OperatorID}, this.GetClientListOperationCompleted, userState);
        }
        
        private void OnGetClientListOperationCompleted(object arg) {
            if ((this.GetClientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientListCompleted(this, new GetClientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetClientListByCreator", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Client[] GetClientListByCreator(string OperatorID, string CreaterID) {
            object[] results = this.Invoke("GetClientListByCreator", new object[] {
                        OperatorID,
                        CreaterID});
            return ((t_Client[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClientListByCreatorAsync(string OperatorID, string CreaterID) {
            this.GetClientListByCreatorAsync(OperatorID, CreaterID, null);
        }
        
        /// <remarks/>
        public void GetClientListByCreatorAsync(string OperatorID, string CreaterID, object userState) {
            if ((this.GetClientListByCreatorOperationCompleted == null)) {
                this.GetClientListByCreatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientListByCreatorOperationCompleted);
            }
            this.InvokeAsync("GetClientListByCreator", new object[] {
                        OperatorID,
                        CreaterID}, this.GetClientListByCreatorOperationCompleted, userState);
        }
        
        private void OnGetClientListByCreatorOperationCompleted(object arg) {
            if ((this.GetClientListByCreatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientListByCreatorCompleted(this, new GetClientListByCreatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/AddOperation", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOperation(t_Operation mOperation, string OperatorID) {
            this.Invoke("AddOperation", new object[] {
                        mOperation,
                        OperatorID});
        }
        
        /// <remarks/>
        public void AddOperationAsync(t_Operation mOperation, string OperatorID) {
            this.AddOperationAsync(mOperation, OperatorID, null);
        }
        
        /// <remarks/>
        public void AddOperationAsync(t_Operation mOperation, string OperatorID, object userState) {
            if ((this.AddOperationOperationCompleted == null)) {
                this.AddOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationOperationCompleted);
            }
            this.InvokeAsync("AddOperation", new object[] {
                        mOperation,
                        OperatorID}, this.AddOperationOperationCompleted, userState);
        }
        
        private void OnAddOperationOperationCompleted(object arg) {
            if ((this.AddOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetOperation", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOperation(t_Operation mOperation, string OperatorID) {
            this.Invoke("SetOperation", new object[] {
                        mOperation,
                        OperatorID});
        }
        
        /// <remarks/>
        public void SetOperationAsync(t_Operation mOperation, string OperatorID) {
            this.SetOperationAsync(mOperation, OperatorID, null);
        }
        
        /// <remarks/>
        public void SetOperationAsync(t_Operation mOperation, string OperatorID, object userState) {
            if ((this.SetOperationOperationCompleted == null)) {
                this.SetOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOperationOperationCompleted);
            }
            this.InvokeAsync("SetOperation", new object[] {
                        mOperation,
                        OperatorID}, this.SetOperationOperationCompleted, userState);
        }
        
        private void OnSetOperationOperationCompleted(object arg) {
            if ((this.SetOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/DelOperation", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelOperation(t_Operation mOperation, string OperatorID) {
            this.Invoke("DelOperation", new object[] {
                        mOperation,
                        OperatorID});
        }
        
        /// <remarks/>
        public void DelOperationAsync(t_Operation mOperation, string OperatorID) {
            this.DelOperationAsync(mOperation, OperatorID, null);
        }
        
        /// <remarks/>
        public void DelOperationAsync(t_Operation mOperation, string OperatorID, object userState) {
            if ((this.DelOperationOperationCompleted == null)) {
                this.DelOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelOperationOperationCompleted);
            }
            this.InvokeAsync("DelOperation", new object[] {
                        mOperation,
                        OperatorID}, this.DelOperationOperationCompleted, userState);
        }
        
        private void OnDelOperationOperationCompleted(object arg) {
            if ((this.DelOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetOperationListByClientID", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Operation[] GetOperationListByClientID(string ClientID) {
            object[] results = this.Invoke("GetOperationListByClientID", new object[] {
                        ClientID});
            return ((t_Operation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationListByClientIDAsync(string ClientID) {
            this.GetOperationListByClientIDAsync(ClientID, null);
        }
        
        /// <remarks/>
        public void GetOperationListByClientIDAsync(string ClientID, object userState) {
            if ((this.GetOperationListByClientIDOperationCompleted == null)) {
                this.GetOperationListByClientIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationListByClientIDOperationCompleted);
            }
            this.InvokeAsync("GetOperationListByClientID", new object[] {
                        ClientID}, this.GetOperationListByClientIDOperationCompleted, userState);
        }
        
        private void OnGetOperationListByClientIDOperationCompleted(object arg) {
            if ((this.GetOperationListByClientIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationListByClientIDCompleted(this, new GetOperationListByClientIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetOperationList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Operation[] GetOperationList(string OperatorID) {
            object[] results = this.Invoke("GetOperationList", new object[] {
                        OperatorID});
            return ((t_Operation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationListAsync(string OperatorID) {
            this.GetOperationListAsync(OperatorID, null);
        }
        
        /// <remarks/>
        public void GetOperationListAsync(string OperatorID, object userState) {
            if ((this.GetOperationListOperationCompleted == null)) {
                this.GetOperationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationListOperationCompleted);
            }
            this.InvokeAsync("GetOperationList", new object[] {
                        OperatorID}, this.GetOperationListOperationCompleted, userState);
        }
        
        private void OnGetOperationListOperationCompleted(object arg) {
            if ((this.GetOperationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationListCompleted(this, new GetOperationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetOperation", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Operation GetOperation(string KeyID, string OperatorID) {
            object[] results = this.Invoke("GetOperation", new object[] {
                        KeyID,
                        OperatorID});
            return ((t_Operation)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationAsync(string KeyID, string OperatorID) {
            this.GetOperationAsync(KeyID, OperatorID, null);
        }
        
        /// <remarks/>
        public void GetOperationAsync(string KeyID, string OperatorID, object userState) {
            if ((this.GetOperationOperationCompleted == null)) {
                this.GetOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationOperationCompleted);
            }
            this.InvokeAsync("GetOperation", new object[] {
                        KeyID,
                        OperatorID}, this.GetOperationOperationCompleted, userState);
        }
        
        private void OnGetOperationOperationCompleted(object arg) {
            if ((this.GetOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationCompleted(this, new GetOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/AddOperationState", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOperationState(t_OperationState mState, string OperatorID) {
            this.Invoke("AddOperationState", new object[] {
                        mState,
                        OperatorID});
        }
        
        /// <remarks/>
        public void AddOperationStateAsync(t_OperationState mState, string OperatorID) {
            this.AddOperationStateAsync(mState, OperatorID, null);
        }
        
        /// <remarks/>
        public void AddOperationStateAsync(t_OperationState mState, string OperatorID, object userState) {
            if ((this.AddOperationStateOperationCompleted == null)) {
                this.AddOperationStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationStateOperationCompleted);
            }
            this.InvokeAsync("AddOperationState", new object[] {
                        mState,
                        OperatorID}, this.AddOperationStateOperationCompleted, userState);
        }
        
        private void OnAddOperationStateOperationCompleted(object arg) {
            if ((this.AddOperationStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOperationStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/DelOperationState", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelOperationState(t_OperationState mState, string OperatorID) {
            this.Invoke("DelOperationState", new object[] {
                        mState,
                        OperatorID});
        }
        
        /// <remarks/>
        public void DelOperationStateAsync(t_OperationState mState, string OperatorID) {
            this.DelOperationStateAsync(mState, OperatorID, null);
        }
        
        /// <remarks/>
        public void DelOperationStateAsync(t_OperationState mState, string OperatorID, object userState) {
            if ((this.DelOperationStateOperationCompleted == null)) {
                this.DelOperationStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelOperationStateOperationCompleted);
            }
            this.InvokeAsync("DelOperationState", new object[] {
                        mState,
                        OperatorID}, this.DelOperationStateOperationCompleted, userState);
        }
        
        private void OnDelOperationStateOperationCompleted(object arg) {
            if ((this.DelOperationStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelOperationStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetOperationState", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOperationState(t_OperationState mState, string OperatorID) {
            this.Invoke("SetOperationState", new object[] {
                        mState,
                        OperatorID});
        }
        
        /// <remarks/>
        public void SetOperationStateAsync(t_OperationState mState, string OperatorID) {
            this.SetOperationStateAsync(mState, OperatorID, null);
        }
        
        /// <remarks/>
        public void SetOperationStateAsync(t_OperationState mState, string OperatorID, object userState) {
            if ((this.SetOperationStateOperationCompleted == null)) {
                this.SetOperationStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOperationStateOperationCompleted);
            }
            this.InvokeAsync("SetOperationState", new object[] {
                        mState,
                        OperatorID}, this.SetOperationStateOperationCompleted, userState);
        }
        
        private void OnSetOperationStateOperationCompleted(object arg) {
            if ((this.SetOperationStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOperationStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/AddProduct", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddProduct(t_Product mProduct, string OperatorID) {
            this.Invoke("AddProduct", new object[] {
                        mProduct,
                        OperatorID});
        }
        
        /// <remarks/>
        public void AddProductAsync(t_Product mProduct, string OperatorID) {
            this.AddProductAsync(mProduct, OperatorID, null);
        }
        
        /// <remarks/>
        public void AddProductAsync(t_Product mProduct, string OperatorID, object userState) {
            if ((this.AddProductOperationCompleted == null)) {
                this.AddProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductOperationCompleted);
            }
            this.InvokeAsync("AddProduct", new object[] {
                        mProduct,
                        OperatorID}, this.AddProductOperationCompleted, userState);
        }
        
        private void OnAddProductOperationCompleted(object arg) {
            if ((this.AddProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetProduct", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetProduct(t_Product mProduct, string OperatorID) {
            this.Invoke("SetProduct", new object[] {
                        mProduct,
                        OperatorID});
        }
        
        /// <remarks/>
        public void SetProductAsync(t_Product mProduct, string OperatorID) {
            this.SetProductAsync(mProduct, OperatorID, null);
        }
        
        /// <remarks/>
        public void SetProductAsync(t_Product mProduct, string OperatorID, object userState) {
            if ((this.SetProductOperationCompleted == null)) {
                this.SetProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetProductOperationCompleted);
            }
            this.InvokeAsync("SetProduct", new object[] {
                        mProduct,
                        OperatorID}, this.SetProductOperationCompleted, userState);
        }
        
        private void OnSetProductOperationCompleted(object arg) {
            if ((this.SetProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/DelProduct", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelProduct(t_Product mProduct, string OperatorID) {
            this.Invoke("DelProduct", new object[] {
                        mProduct,
                        OperatorID});
        }
        
        /// <remarks/>
        public void DelProductAsync(t_Product mProduct, string OperatorID) {
            this.DelProductAsync(mProduct, OperatorID, null);
        }
        
        /// <remarks/>
        public void DelProductAsync(t_Product mProduct, string OperatorID, object userState) {
            if ((this.DelProductOperationCompleted == null)) {
                this.DelProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelProductOperationCompleted);
            }
            this.InvokeAsync("DelProduct", new object[] {
                        mProduct,
                        OperatorID}, this.DelProductOperationCompleted, userState);
        }
        
        private void OnDelProductOperationCompleted(object arg) {
            if ((this.DelProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetProduct", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Product GetProduct(string KeyID, string OperatorID) {
            object[] results = this.Invoke("GetProduct", new object[] {
                        KeyID,
                        OperatorID});
            return ((t_Product)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductAsync(string KeyID, string OperatorID) {
            this.GetProductAsync(KeyID, OperatorID, null);
        }
        
        /// <remarks/>
        public void GetProductAsync(string KeyID, string OperatorID, object userState) {
            if ((this.GetProductOperationCompleted == null)) {
                this.GetProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductOperationCompleted);
            }
            this.InvokeAsync("GetProduct", new object[] {
                        KeyID,
                        OperatorID}, this.GetProductOperationCompleted, userState);
        }
        
        private void OnGetProductOperationCompleted(object arg) {
            if ((this.GetProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductCompleted(this, new GetProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetProductList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Product[] GetProductList(string OperatorID) {
            object[] results = this.Invoke("GetProductList", new object[] {
                        OperatorID});
            return ((t_Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductListAsync(string OperatorID) {
            this.GetProductListAsync(OperatorID, null);
        }
        
        /// <remarks/>
        public void GetProductListAsync(string OperatorID, object userState) {
            if ((this.GetProductListOperationCompleted == null)) {
                this.GetProductListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductListOperationCompleted);
            }
            this.InvokeAsync("GetProductList", new object[] {
                        OperatorID}, this.GetProductListOperationCompleted, userState);
        }
        
        private void OnGetProductListOperationCompleted(object arg) {
            if ((this.GetProductListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductListCompleted(this, new GetProductListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/AddtrOP", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddtrOP(t_r_OperationProduct mOP, string OperatorID) {
            this.Invoke("AddtrOP", new object[] {
                        mOP,
                        OperatorID});
        }
        
        /// <remarks/>
        public void AddtrOPAsync(t_r_OperationProduct mOP, string OperatorID) {
            this.AddtrOPAsync(mOP, OperatorID, null);
        }
        
        /// <remarks/>
        public void AddtrOPAsync(t_r_OperationProduct mOP, string OperatorID, object userState) {
            if ((this.AddtrOPOperationCompleted == null)) {
                this.AddtrOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddtrOPOperationCompleted);
            }
            this.InvokeAsync("AddtrOP", new object[] {
                        mOP,
                        OperatorID}, this.AddtrOPOperationCompleted, userState);
        }
        
        private void OnAddtrOPOperationCompleted(object arg) {
            if ((this.AddtrOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddtrOPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SettrOP", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SettrOP(t_r_OperationProduct mOP, string OperatorID) {
            this.Invoke("SettrOP", new object[] {
                        mOP,
                        OperatorID});
        }
        
        /// <remarks/>
        public void SettrOPAsync(t_r_OperationProduct mOP, string OperatorID) {
            this.SettrOPAsync(mOP, OperatorID, null);
        }
        
        /// <remarks/>
        public void SettrOPAsync(t_r_OperationProduct mOP, string OperatorID, object userState) {
            if ((this.SettrOPOperationCompleted == null)) {
                this.SettrOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSettrOPOperationCompleted);
            }
            this.InvokeAsync("SettrOP", new object[] {
                        mOP,
                        OperatorID}, this.SettrOPOperationCompleted, userState);
        }
        
        private void OnSettrOPOperationCompleted(object arg) {
            if ((this.SettrOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SettrOPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_Client {
        
        private string keyIDField;
        
        private string sClientNameField;
        
        private string sAddressField;
        
        private string sMobiPhoneField;
        
        private string sTelPhoneField;
        
        private string createUserIDField;
        
        private string memoField;
        
        private System.Nullable<bool> isEnableField;
        
        private System.Nullable<System.DateTime> lastUpdateField;
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string sClientName {
            get {
                return this.sClientNameField;
            }
            set {
                this.sClientNameField = value;
            }
        }
        
        /// <remarks/>
        public string sAddress {
            get {
                return this.sAddressField;
            }
            set {
                this.sAddressField = value;
            }
        }
        
        /// <remarks/>
        public string sMobiPhone {
            get {
                return this.sMobiPhoneField;
            }
            set {
                this.sMobiPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string sTelPhone {
            get {
                return this.sTelPhoneField;
            }
            set {
                this.sTelPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserID {
            get {
                return this.createUserIDField;
            }
            set {
                this.createUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string Memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsEnable {
            get {
                return this.isEnableField;
            }
            set {
                this.isEnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_r_OperationProduct {
        
        private string keyIDField;
        
        private string operationIDField;
        
        private string productIDField;
        
        private System.Nullable<double> iPriceField;
        
        private System.Nullable<int> iDiscountField;
        
        private System.Nullable<double> iCurrentPriceField;
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string OperationID {
            get {
                return this.operationIDField;
            }
            set {
                this.operationIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> iPrice {
            get {
                return this.iPriceField;
            }
            set {
                this.iPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iDiscount {
            get {
                return this.iDiscountField;
            }
            set {
                this.iDiscountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> iCurrentPrice {
            get {
                return this.iCurrentPriceField;
            }
            set {
                this.iCurrentPriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_Product {
        
        private System.Nullable<System.Guid> keyIDField;
        
        private string sProductNameField;
        
        private System.Nullable<double> iPriceField;
        
        private string memoField;
        
        private System.Nullable<int> iDiscountField;
        
        private System.Nullable<bool> isEnableField;
        
        private System.Nullable<System.DateTime> begindateField;
        
        private System.Nullable<System.DateTime> enddateField;
        
        private System.Nullable<System.DateTime> lastUpdateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string sProductName {
            get {
                return this.sProductNameField;
            }
            set {
                this.sProductNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> iPrice {
            get {
                return this.iPriceField;
            }
            set {
                this.iPriceField = value;
            }
        }
        
        /// <remarks/>
        public string Memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iDiscount {
            get {
                return this.iDiscountField;
            }
            set {
                this.iDiscountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsEnable {
            get {
                return this.isEnableField;
            }
            set {
                this.isEnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Begindate {
            get {
                return this.begindateField;
            }
            set {
                this.begindateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Enddate {
            get {
                return this.enddateField;
            }
            set {
                this.enddateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_OperationState {
        
        private System.Nullable<int> keyIDField;
        
        private string sStatusNameField;
        
        private System.Nullable<int> iIndexField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string sStatusName {
            get {
                return this.sStatusNameField;
            }
            set {
                this.sStatusNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iIndex {
            get {
                return this.iIndexField;
            }
            set {
                this.iIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_Operation {
        
        private string keyIDField;
        
        private string clientIDField;
        
        private System.Nullable<int> iStatusField;
        
        private System.Nullable<double> iTotalPriceField;
        
        private string createUserField;
        
        private string memoField;
        
        private System.Nullable<bool> isEnableField;
        
        private System.Nullable<System.DateTime> lastUpdateField;
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iStatus {
            get {
                return this.iStatusField;
            }
            set {
                this.iStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> iTotalPrice {
            get {
                return this.iTotalPriceField;
            }
            set {
                this.iTotalPriceField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        public string Memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsEnable {
            get {
                return this.isEnableField;
            }
            set {
                this.isEnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetClientCompletedEventHandler(object sender, GetClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetClientListCompletedEventHandler(object sender, GetClientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Client[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Client[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetClientListByCreatorCompletedEventHandler(object sender, GetClientListByCreatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientListByCreatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientListByCreatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Client[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Client[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddOperationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetOperationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelOperationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOperationListByClientIDCompletedEventHandler(object sender, GetOperationListByClientIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationListByClientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationListByClientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Operation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Operation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOperationListCompletedEventHandler(object sender, GetOperationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Operation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Operation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOperationCompletedEventHandler(object sender, GetOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Operation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Operation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddOperationStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelOperationStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetOperationStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProductCompletedEventHandler(object sender, GetProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProductListCompletedEventHandler(object sender, GetProductListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddtrOPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SettrOPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591