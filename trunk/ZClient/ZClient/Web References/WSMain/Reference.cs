//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace ZClient.WSMain {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MainServiceSoap", Namespace="http://Zsystem.Info/")]
    public partial class MainService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServerVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGlobalParaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalParaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSystemUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAuthListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelUserAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserStateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MainService() {
            this.Url = global::ZClient.Properties.Settings.Default.ZClient_WSMain_MainService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServerVersionCompletedEventHandler GetServerVersionCompleted;
        
        /// <remarks/>
        public event SetGlobalParaCompletedEventHandler SetGlobalParaCompleted;
        
        /// <remarks/>
        public event GetGlobalParaCompletedEventHandler GetGlobalParaCompleted;
        
        /// <remarks/>
        public event GetSystemUserListCompletedEventHandler GetSystemUserListCompleted;
        
        /// <remarks/>
        public event GetSystemUserCompletedEventHandler GetSystemUserCompleted;
        
        /// <remarks/>
        public event AddSystemUserCompletedEventHandler AddSystemUserCompleted;
        
        /// <remarks/>
        public event ValidUserCompletedEventHandler ValidUserCompleted;
        
        /// <remarks/>
        public event GetUserAuthListCompletedEventHandler GetUserAuthListCompleted;
        
        /// <remarks/>
        public event SetUserAuthCompletedEventHandler SetUserAuthCompleted;
        
        /// <remarks/>
        public event DelUserAuthCompletedEventHandler DelUserAuthCompleted;
        
        /// <remarks/>
        public event SetUserStateCompletedEventHandler SetUserStateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetServerVersion", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServerVersion() {
            object[] results = this.Invoke("GetServerVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerVersionAsync() {
            this.GetServerVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetServerVersionAsync(object userState) {
            if ((this.GetServerVersionOperationCompleted == null)) {
                this.GetServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerVersionOperationCompleted);
            }
            this.InvokeAsync("GetServerVersion", new object[0], this.GetServerVersionOperationCompleted, userState);
        }
        
        private void OnGetServerVersionOperationCompleted(object arg) {
            if ((this.GetServerVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerVersionCompleted(this, new GetServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetGlobalPara", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetGlobalPara(t_GlobalPara mGlobal, string UserID) {
            this.Invoke("SetGlobalPara", new object[] {
                        mGlobal,
                        UserID});
        }
        
        /// <remarks/>
        public void SetGlobalParaAsync(t_GlobalPara mGlobal, string UserID) {
            this.SetGlobalParaAsync(mGlobal, UserID, null);
        }
        
        /// <remarks/>
        public void SetGlobalParaAsync(t_GlobalPara mGlobal, string UserID, object userState) {
            if ((this.SetGlobalParaOperationCompleted == null)) {
                this.SetGlobalParaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGlobalParaOperationCompleted);
            }
            this.InvokeAsync("SetGlobalPara", new object[] {
                        mGlobal,
                        UserID}, this.SetGlobalParaOperationCompleted, userState);
        }
        
        private void OnSetGlobalParaOperationCompleted(object arg) {
            if ((this.SetGlobalParaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGlobalParaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetGlobalPara", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGlobalPara(int iKeyID) {
            object[] results = this.Invoke("GetGlobalPara", new object[] {
                        iKeyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalParaAsync(int iKeyID) {
            this.GetGlobalParaAsync(iKeyID, null);
        }
        
        /// <remarks/>
        public void GetGlobalParaAsync(int iKeyID, object userState) {
            if ((this.GetGlobalParaOperationCompleted == null)) {
                this.GetGlobalParaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalParaOperationCompleted);
            }
            this.InvokeAsync("GetGlobalPara", new object[] {
                        iKeyID}, this.GetGlobalParaOperationCompleted, userState);
        }
        
        private void OnGetGlobalParaOperationCompleted(object arg) {
            if ((this.GetGlobalParaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalParaCompleted(this, new GetGlobalParaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetSystemUserList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_SystemUser[] GetSystemUserList() {
            object[] results = this.Invoke("GetSystemUserList", new object[0]);
            return ((t_SystemUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemUserListAsync() {
            this.GetSystemUserListAsync(null);
        }
        
        /// <remarks/>
        public void GetSystemUserListAsync(object userState) {
            if ((this.GetSystemUserListOperationCompleted == null)) {
                this.GetSystemUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemUserListOperationCompleted);
            }
            this.InvokeAsync("GetSystemUserList", new object[0], this.GetSystemUserListOperationCompleted, userState);
        }
        
        private void OnGetSystemUserListOperationCompleted(object arg) {
            if ((this.GetSystemUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemUserListCompleted(this, new GetSystemUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetSystemUser", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_SystemUser GetSystemUser(string sKeyID) {
            object[] results = this.Invoke("GetSystemUser", new object[] {
                        sKeyID});
            return ((t_SystemUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemUserAsync(string sKeyID) {
            this.GetSystemUserAsync(sKeyID, null);
        }
        
        /// <remarks/>
        public void GetSystemUserAsync(string sKeyID, object userState) {
            if ((this.GetSystemUserOperationCompleted == null)) {
                this.GetSystemUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemUserOperationCompleted);
            }
            this.InvokeAsync("GetSystemUser", new object[] {
                        sKeyID}, this.GetSystemUserOperationCompleted, userState);
        }
        
        private void OnGetSystemUserOperationCompleted(object arg) {
            if ((this.GetSystemUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemUserCompleted(this, new GetSystemUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/AddSystemUser", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddSystemUser(t_SystemUser mSystemUser, string sUserID) {
            this.Invoke("AddSystemUser", new object[] {
                        mSystemUser,
                        sUserID});
        }
        
        /// <remarks/>
        public void AddSystemUserAsync(t_SystemUser mSystemUser, string sUserID) {
            this.AddSystemUserAsync(mSystemUser, sUserID, null);
        }
        
        /// <remarks/>
        public void AddSystemUserAsync(t_SystemUser mSystemUser, string sUserID, object userState) {
            if ((this.AddSystemUserOperationCompleted == null)) {
                this.AddSystemUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSystemUserOperationCompleted);
            }
            this.InvokeAsync("AddSystemUser", new object[] {
                        mSystemUser,
                        sUserID}, this.AddSystemUserOperationCompleted, userState);
        }
        
        private void OnAddSystemUserOperationCompleted(object arg) {
            if ((this.AddSystemUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSystemUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/ValidUser", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidUser(string sLoginName, string sPassword) {
            object[] results = this.Invoke("ValidUser", new object[] {
                        sLoginName,
                        sPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidUserAsync(string sLoginName, string sPassword) {
            this.ValidUserAsync(sLoginName, sPassword, null);
        }
        
        /// <remarks/>
        public void ValidUserAsync(string sLoginName, string sPassword, object userState) {
            if ((this.ValidUserOperationCompleted == null)) {
                this.ValidUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidUserOperationCompleted);
            }
            this.InvokeAsync("ValidUser", new object[] {
                        sLoginName,
                        sPassword}, this.ValidUserOperationCompleted, userState);
        }
        
        private void OnValidUserOperationCompleted(object arg) {
            if ((this.ValidUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidUserCompleted(this, new ValidUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetUserAuthList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_Authorization[] GetUserAuthList(string UserID) {
            object[] results = this.Invoke("GetUserAuthList", new object[] {
                        UserID});
            return ((t_Authorization[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAuthListAsync(string UserID) {
            this.GetUserAuthListAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserAuthListAsync(string UserID, object userState) {
            if ((this.GetUserAuthListOperationCompleted == null)) {
                this.GetUserAuthListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAuthListOperationCompleted);
            }
            this.InvokeAsync("GetUserAuthList", new object[] {
                        UserID}, this.GetUserAuthListOperationCompleted, userState);
        }
        
        private void OnGetUserAuthListOperationCompleted(object arg) {
            if ((this.GetUserAuthListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAuthListCompleted(this, new GetUserAuthListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetUserAuth", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetUserAuth(string OperateUserID, t_Authorization mAuth) {
            this.Invoke("SetUserAuth", new object[] {
                        OperateUserID,
                        mAuth});
        }
        
        /// <remarks/>
        public void SetUserAuthAsync(string OperateUserID, t_Authorization mAuth) {
            this.SetUserAuthAsync(OperateUserID, mAuth, null);
        }
        
        /// <remarks/>
        public void SetUserAuthAsync(string OperateUserID, t_Authorization mAuth, object userState) {
            if ((this.SetUserAuthOperationCompleted == null)) {
                this.SetUserAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserAuthOperationCompleted);
            }
            this.InvokeAsync("SetUserAuth", new object[] {
                        OperateUserID,
                        mAuth}, this.SetUserAuthOperationCompleted, userState);
        }
        
        private void OnSetUserAuthOperationCompleted(object arg) {
            if ((this.SetUserAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserAuthCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/DelUserAuth", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelUserAuth(string OperateUserID, t_Authorization mAuth) {
            this.Invoke("DelUserAuth", new object[] {
                        OperateUserID,
                        mAuth});
        }
        
        /// <remarks/>
        public void DelUserAuthAsync(string OperateUserID, t_Authorization mAuth) {
            this.DelUserAuthAsync(OperateUserID, mAuth, null);
        }
        
        /// <remarks/>
        public void DelUserAuthAsync(string OperateUserID, t_Authorization mAuth, object userState) {
            if ((this.DelUserAuthOperationCompleted == null)) {
                this.DelUserAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelUserAuthOperationCompleted);
            }
            this.InvokeAsync("DelUserAuth", new object[] {
                        OperateUserID,
                        mAuth}, this.DelUserAuthOperationCompleted, userState);
        }
        
        private void OnDelUserAuthOperationCompleted(object arg) {
            if ((this.DelUserAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelUserAuthCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetUserState", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetUserState(string UserID, eSysUserState UserState) {
            this.Invoke("SetUserState", new object[] {
                        UserID,
                        UserState});
        }
        
        /// <remarks/>
        public void SetUserStateAsync(string UserID, eSysUserState UserState) {
            this.SetUserStateAsync(UserID, UserState, null);
        }
        
        /// <remarks/>
        public void SetUserStateAsync(string UserID, eSysUserState UserState, object userState) {
            if ((this.SetUserStateOperationCompleted == null)) {
                this.SetUserStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserStateOperationCompleted);
            }
            this.InvokeAsync("SetUserState", new object[] {
                        UserID,
                        UserState}, this.SetUserStateOperationCompleted, userState);
        }
        
        private void OnSetUserStateOperationCompleted(object arg) {
            if ((this.SetUserStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_GlobalPara {
        
        private System.Nullable<int> keyIDField;
        
        private string sValueField;
        
        private string memoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string sValue {
            get {
                return this.sValueField;
            }
            set {
                this.sValueField = value;
            }
        }
        
        /// <remarks/>
        public string Memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_Authorization {
        
        private string userIDField;
        
        private System.Nullable<int> iUserLevelField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iUserLevel {
            get {
                return this.iUserLevelField;
            }
            set {
                this.iUserLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_SystemUser {
        
        private string keyIDField;
        
        private string sUserNameField;
        
        private string sLoginNameField;
        
        private string sPasswordField;
        
        private System.Nullable<System.DateTime> lastUpdateField;
        
        private bool isEnableField;
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string sUserName {
            get {
                return this.sUserNameField;
            }
            set {
                this.sUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string sLoginName {
            get {
                return this.sLoginNameField;
            }
            set {
                this.sLoginNameField = value;
            }
        }
        
        /// <remarks/>
        public string sPassword {
            get {
                return this.sPasswordField;
            }
            set {
                this.sPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnable {
            get {
                return this.isEnableField;
            }
            set {
                this.isEnableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public enum eSysUserState {
        
        /// <remarks/>
        OffLine,
        
        /// <remarks/>
        Online,
        
        /// <remarks/>
        Leave,
        
        /// <remarks/>
        Login,
        
        /// <remarks/>
        Logoff,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServerVersionCompletedEventHandler(object sender, GetServerVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetGlobalParaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGlobalParaCompletedEventHandler(object sender, GetGlobalParaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalParaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalParaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSystemUserListCompletedEventHandler(object sender, GetSystemUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_SystemUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_SystemUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSystemUserCompletedEventHandler(object sender, GetSystemUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_SystemUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_SystemUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddSystemUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidUserCompletedEventHandler(object sender, ValidUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserAuthListCompletedEventHandler(object sender, GetUserAuthListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAuthListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAuthListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_Authorization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_Authorization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetUserAuthCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelUserAuthCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetUserStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591