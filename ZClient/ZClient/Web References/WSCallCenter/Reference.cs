//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace ZClient.WSCallCenter {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CCServiceSoap", Namespace="http://Zsystem.Info/")]
    public partial class CCService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddIVROperationCompleted;
        
        private System.Threading.SendOrPostCallback SetIVROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIVROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIVRListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCHStateStaticListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCHStateStaticOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCHStateDynamicListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallInListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCallInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallOutListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCallOutOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CCService() {
            this.Url = global::ZClient.Properties.Settings.Default.ZClient_WSCallCenter_CCService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddIVRCompletedEventHandler AddIVRCompleted;
        
        /// <remarks/>
        public event SetIVRCompletedEventHandler SetIVRCompleted;
        
        /// <remarks/>
        public event GetIVRCompletedEventHandler GetIVRCompleted;
        
        /// <remarks/>
        public event GetIVRListCompletedEventHandler GetIVRListCompleted;
        
        /// <remarks/>
        public event GetCHStateStaticListCompletedEventHandler GetCHStateStaticListCompleted;
        
        /// <remarks/>
        public event SetCHStateStaticCompletedEventHandler SetCHStateStaticCompleted;
        
        /// <remarks/>
        public event GetCHStateDynamicListCompletedEventHandler GetCHStateDynamicListCompleted;
        
        /// <remarks/>
        public event GetCallInListCompletedEventHandler GetCallInListCompleted;
        
        /// <remarks/>
        public event SetCallInCompletedEventHandler SetCallInCompleted;
        
        /// <remarks/>
        public event GetCallOutListCompletedEventHandler GetCallOutListCompleted;
        
        /// <remarks/>
        public event AddCallOutCompletedEventHandler AddCallOutCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/AddIVR", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddIVR(t_IVRControl mIVR, string OperatorID) {
            this.Invoke("AddIVR", new object[] {
                        mIVR,
                        OperatorID});
        }
        
        /// <remarks/>
        public void AddIVRAsync(t_IVRControl mIVR, string OperatorID) {
            this.AddIVRAsync(mIVR, OperatorID, null);
        }
        
        /// <remarks/>
        public void AddIVRAsync(t_IVRControl mIVR, string OperatorID, object userState) {
            if ((this.AddIVROperationCompleted == null)) {
                this.AddIVROperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddIVROperationCompleted);
            }
            this.InvokeAsync("AddIVR", new object[] {
                        mIVR,
                        OperatorID}, this.AddIVROperationCompleted, userState);
        }
        
        private void OnAddIVROperationCompleted(object arg) {
            if ((this.AddIVRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddIVRCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetIVR", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetIVR(t_IVRControl mIVR, string OperatorID) {
            this.Invoke("SetIVR", new object[] {
                        mIVR,
                        OperatorID});
        }
        
        /// <remarks/>
        public void SetIVRAsync(t_IVRControl mIVR, string OperatorID) {
            this.SetIVRAsync(mIVR, OperatorID, null);
        }
        
        /// <remarks/>
        public void SetIVRAsync(t_IVRControl mIVR, string OperatorID, object userState) {
            if ((this.SetIVROperationCompleted == null)) {
                this.SetIVROperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetIVROperationCompleted);
            }
            this.InvokeAsync("SetIVR", new object[] {
                        mIVR,
                        OperatorID}, this.SetIVROperationCompleted, userState);
        }
        
        private void OnSetIVROperationCompleted(object arg) {
            if ((this.SetIVRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetIVRCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetIVR", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_IVRControl GetIVR(string KeyID) {
            object[] results = this.Invoke("GetIVR", new object[] {
                        KeyID});
            return ((t_IVRControl)(results[0]));
        }
        
        /// <remarks/>
        public void GetIVRAsync(string KeyID) {
            this.GetIVRAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void GetIVRAsync(string KeyID, object userState) {
            if ((this.GetIVROperationCompleted == null)) {
                this.GetIVROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIVROperationCompleted);
            }
            this.InvokeAsync("GetIVR", new object[] {
                        KeyID}, this.GetIVROperationCompleted, userState);
        }
        
        private void OnGetIVROperationCompleted(object arg) {
            if ((this.GetIVRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIVRCompleted(this, new GetIVRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetIVRList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_IVRControl[] GetIVRList() {
            object[] results = this.Invoke("GetIVRList", new object[0]);
            return ((t_IVRControl[])(results[0]));
        }
        
        /// <remarks/>
        public void GetIVRListAsync() {
            this.GetIVRListAsync(null);
        }
        
        /// <remarks/>
        public void GetIVRListAsync(object userState) {
            if ((this.GetIVRListOperationCompleted == null)) {
                this.GetIVRListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIVRListOperationCompleted);
            }
            this.InvokeAsync("GetIVRList", new object[0], this.GetIVRListOperationCompleted, userState);
        }
        
        private void OnGetIVRListOperationCompleted(object arg) {
            if ((this.GetIVRListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIVRListCompleted(this, new GetIVRListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetCHStateStaticList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_ChannelStateStatic[] GetCHStateStaticList() {
            object[] results = this.Invoke("GetCHStateStaticList", new object[0]);
            return ((t_ChannelStateStatic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCHStateStaticListAsync() {
            this.GetCHStateStaticListAsync(null);
        }
        
        /// <remarks/>
        public void GetCHStateStaticListAsync(object userState) {
            if ((this.GetCHStateStaticListOperationCompleted == null)) {
                this.GetCHStateStaticListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCHStateStaticListOperationCompleted);
            }
            this.InvokeAsync("GetCHStateStaticList", new object[0], this.GetCHStateStaticListOperationCompleted, userState);
        }
        
        private void OnGetCHStateStaticListOperationCompleted(object arg) {
            if ((this.GetCHStateStaticListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCHStateStaticListCompleted(this, new GetCHStateStaticListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetCHStateStatic", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetCHStateStatic(t_ChannelStateStatic mChState) {
            this.Invoke("SetCHStateStatic", new object[] {
                        mChState});
        }
        
        /// <remarks/>
        public void SetCHStateStaticAsync(t_ChannelStateStatic mChState) {
            this.SetCHStateStaticAsync(mChState, null);
        }
        
        /// <remarks/>
        public void SetCHStateStaticAsync(t_ChannelStateStatic mChState, object userState) {
            if ((this.SetCHStateStaticOperationCompleted == null)) {
                this.SetCHStateStaticOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCHStateStaticOperationCompleted);
            }
            this.InvokeAsync("SetCHStateStatic", new object[] {
                        mChState}, this.SetCHStateStaticOperationCompleted, userState);
        }
        
        private void OnSetCHStateStaticOperationCompleted(object arg) {
            if ((this.SetCHStateStaticCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCHStateStaticCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetCHStateDynamicList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_ChannelStateDynamic[] GetCHStateDynamicList() {
            object[] results = this.Invoke("GetCHStateDynamicList", new object[0]);
            return ((t_ChannelStateDynamic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCHStateDynamicListAsync() {
            this.GetCHStateDynamicListAsync(null);
        }
        
        /// <remarks/>
        public void GetCHStateDynamicListAsync(object userState) {
            if ((this.GetCHStateDynamicListOperationCompleted == null)) {
                this.GetCHStateDynamicListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCHStateDynamicListOperationCompleted);
            }
            this.InvokeAsync("GetCHStateDynamicList", new object[0], this.GetCHStateDynamicListOperationCompleted, userState);
        }
        
        private void OnGetCHStateDynamicListOperationCompleted(object arg) {
            if ((this.GetCHStateDynamicListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCHStateDynamicListCompleted(this, new GetCHStateDynamicListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetCallInList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_ReceiveList[] GetCallInList() {
            object[] results = this.Invoke("GetCallInList", new object[0]);
            return ((t_ReceiveList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCallInListAsync() {
            this.GetCallInListAsync(null);
        }
        
        /// <remarks/>
        public void GetCallInListAsync(object userState) {
            if ((this.GetCallInListOperationCompleted == null)) {
                this.GetCallInListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallInListOperationCompleted);
            }
            this.InvokeAsync("GetCallInList", new object[0], this.GetCallInListOperationCompleted, userState);
        }
        
        private void OnGetCallInListOperationCompleted(object arg) {
            if ((this.GetCallInListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallInListCompleted(this, new GetCallInListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/SetCallIn", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetCallIn(t_ReceiveList mCallIn, string OperatorID) {
            this.Invoke("SetCallIn", new object[] {
                        mCallIn,
                        OperatorID});
        }
        
        /// <remarks/>
        public void SetCallInAsync(t_ReceiveList mCallIn, string OperatorID) {
            this.SetCallInAsync(mCallIn, OperatorID, null);
        }
        
        /// <remarks/>
        public void SetCallInAsync(t_ReceiveList mCallIn, string OperatorID, object userState) {
            if ((this.SetCallInOperationCompleted == null)) {
                this.SetCallInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCallInOperationCompleted);
            }
            this.InvokeAsync("SetCallIn", new object[] {
                        mCallIn,
                        OperatorID}, this.SetCallInOperationCompleted, userState);
        }
        
        private void OnSetCallInOperationCompleted(object arg) {
            if ((this.SetCallInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCallInCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/GetCallOutList", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public t_CallList[] GetCallOutList() {
            object[] results = this.Invoke("GetCallOutList", new object[0]);
            return ((t_CallList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCallOutListAsync() {
            this.GetCallOutListAsync(null);
        }
        
        /// <remarks/>
        public void GetCallOutListAsync(object userState) {
            if ((this.GetCallOutListOperationCompleted == null)) {
                this.GetCallOutListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallOutListOperationCompleted);
            }
            this.InvokeAsync("GetCallOutList", new object[0], this.GetCallOutListOperationCompleted, userState);
        }
        
        private void OnGetCallOutListOperationCompleted(object arg) {
            if ((this.GetCallOutListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallOutListCompleted(this, new GetCallOutListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Zsystem.Info/AddCallOut", RequestNamespace="http://Zsystem.Info/", ResponseNamespace="http://Zsystem.Info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCallOut(t_CallList mCallOut, string OperatorID) {
            this.Invoke("AddCallOut", new object[] {
                        mCallOut,
                        OperatorID});
        }
        
        /// <remarks/>
        public void AddCallOutAsync(t_CallList mCallOut, string OperatorID) {
            this.AddCallOutAsync(mCallOut, OperatorID, null);
        }
        
        /// <remarks/>
        public void AddCallOutAsync(t_CallList mCallOut, string OperatorID, object userState) {
            if ((this.AddCallOutOperationCompleted == null)) {
                this.AddCallOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCallOutOperationCompleted);
            }
            this.InvokeAsync("AddCallOut", new object[] {
                        mCallOut,
                        OperatorID}, this.AddCallOutOperationCompleted, userState);
        }
        
        private void OnAddCallOutOperationCompleted(object arg) {
            if ((this.AddCallOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCallOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_IVRControl {
        
        private string keyIDField;
        
        private string sFileNameField;
        
        private System.Nullable<int> iKeyNumField;
        
        private string subIDField;
        
        private string sIVRNameField;
        
        private System.Nullable<bool> isEnableField;
        
        private System.Nullable<System.DateTime> beginDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private System.Nullable<System.DateTime> lastUpdateField;
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string sFileName {
            get {
                return this.sFileNameField;
            }
            set {
                this.sFileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iKeyNum {
            get {
                return this.iKeyNumField;
            }
            set {
                this.iKeyNumField = value;
            }
        }
        
        /// <remarks/>
        public string SubID {
            get {
                return this.subIDField;
            }
            set {
                this.subIDField = value;
            }
        }
        
        /// <remarks/>
        public string sIVRName {
            get {
                return this.sIVRNameField;
            }
            set {
                this.sIVRNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsEnable {
            get {
                return this.isEnableField;
            }
            set {
                this.isEnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BeginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_CallList {
        
        private string keyIDField;
        
        private string sCallOutNumField;
        
        private System.Nullable<int> iTimeElapseField;
        
        private System.Nullable<int> iCallUserCHField;
        
        private string sysUserIDField;
        
        private string clientIDField;
        
        private string memoField;
        
        private System.Nullable<System.DateTime> callDateField;
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string sCallOutNum {
            get {
                return this.sCallOutNumField;
            }
            set {
                this.sCallOutNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iTimeElapse {
            get {
                return this.iTimeElapseField;
            }
            set {
                this.iTimeElapseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iCallUserCH {
            get {
                return this.iCallUserCHField;
            }
            set {
                this.iCallUserCHField = value;
            }
        }
        
        /// <remarks/>
        public string SysUserID {
            get {
                return this.sysUserIDField;
            }
            set {
                this.sysUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        public string Memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CallDate {
            get {
                return this.callDateField;
            }
            set {
                this.callDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_ReceiveList {
        
        private string keyIDField;
        
        private string sCallerIDField;
        
        private string clientIDField;
        
        private string sysUserIDField;
        
        private System.Nullable<int> iTimeElapseField;
        
        private System.Nullable<System.DateTime> receiveDateField;
        
        private string memoField;
        
        /// <remarks/>
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string sCallerID {
            get {
                return this.sCallerIDField;
            }
            set {
                this.sCallerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        public string SysUserID {
            get {
                return this.sysUserIDField;
            }
            set {
                this.sysUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iTimeElapse {
            get {
                return this.iTimeElapseField;
            }
            set {
                this.iTimeElapseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReceiveDate {
            get {
                return this.receiveDateField;
            }
            set {
                this.receiveDateField = value;
            }
        }
        
        /// <remarks/>
        public string Memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_ChannelStateDynamic {
        
        private System.Nullable<int> iChIDField;
        
        private string sChStateField;
        
        private System.Nullable<int> iChTypeField;
        
        private string sCallerField;
        
        private string sDTMFField;
        
        private System.Nullable<int> iTimeElapseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iChID {
            get {
                return this.iChIDField;
            }
            set {
                this.iChIDField = value;
            }
        }
        
        /// <remarks/>
        public string sChState {
            get {
                return this.sChStateField;
            }
            set {
                this.sChStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iChType {
            get {
                return this.iChTypeField;
            }
            set {
                this.iChTypeField = value;
            }
        }
        
        /// <remarks/>
        public string sCaller {
            get {
                return this.sCallerField;
            }
            set {
                this.sCallerField = value;
            }
        }
        
        /// <remarks/>
        public string sDTMF {
            get {
                return this.sDTMFField;
            }
            set {
                this.sDTMFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iTimeElapse {
            get {
                return this.iTimeElapseField;
            }
            set {
                this.iTimeElapseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Zsystem.Info/")]
    public partial class t_ChannelStateStatic {
        
        private System.Nullable<int> iChIDField;
        
        private System.Nullable<int> iChtypeField;
        
        private System.Nullable<int> iChNumField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iChID {
            get {
                return this.iChIDField;
            }
            set {
                this.iChIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iChtype {
            get {
                return this.iChtypeField;
            }
            set {
                this.iChtypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> iChNum {
            get {
                return this.iChNumField;
            }
            set {
                this.iChNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddIVRCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetIVRCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetIVRCompletedEventHandler(object sender, GetIVRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIVRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIVRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_IVRControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_IVRControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetIVRListCompletedEventHandler(object sender, GetIVRListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIVRListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIVRListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_IVRControl[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_IVRControl[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCHStateStaticListCompletedEventHandler(object sender, GetCHStateStaticListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCHStateStaticListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCHStateStaticListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_ChannelStateStatic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_ChannelStateStatic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetCHStateStaticCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCHStateDynamicListCompletedEventHandler(object sender, GetCHStateDynamicListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCHStateDynamicListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCHStateDynamicListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_ChannelStateDynamic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_ChannelStateDynamic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCallInListCompletedEventHandler(object sender, GetCallInListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallInListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallInListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_ReceiveList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_ReceiveList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetCallInCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCallOutListCompletedEventHandler(object sender, GetCallOutListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallOutListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallOutListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public t_CallList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((t_CallList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddCallOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591